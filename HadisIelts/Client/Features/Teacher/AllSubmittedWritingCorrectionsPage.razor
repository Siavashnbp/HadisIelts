@page "/services/writingCorrection/teacher/viewAll"
@using HadisIelts.Client.Features.Correction.UserWritingCorrectionSubmissionsComponents
@using HadisIelts.Client.Features.Teacher.AllSubmittedWritingCorrectionsComponents
@using HadisIelts.Shared.Requests.Teacher;
@inject IMediator Mediator;
<AuthorizeView Roles="Administrator,Teacher">
    <Authorized>
        <div class="container main-form col-lg-10">
            <div class="row align-items-center justify-content-center">
                <div class="col-lg-6">
                    <div class="form-floating">
                        <InputText class="form-control" @bind-Value="_searchPhrase" id="userSearchInput" placeholder="Search Users" />
                        <label for="userSearchInput" style="margin-left:10px;">Search Users</label>
                    </div>
                </div>
                <div class="col-lg-2">
                    <button class="btn btn-secondary" @onclick="(()=>GetAllSubmittedWritingCorrections())">
                        @(string.IsNullOrEmpty(_searchPhrase) ? "Get All" : "Search")
                    </button>
                </div>
            </div>
            @if (_submittedServices is not null)
            {
                <div class="row justify-content-center">
                    <div class="col">
                        @if (_submittedServices is null || _submittedServices.Count == 0)
                        {
                            <h5 class="text-warning">No Users Were Found!</h5>
                        }
                        else
                        {
                            <TeacherWritingCorrectionSubmissionsTable SubmittedServices="_showingServices" />
                            <div class="row justify-content-center text-center">
                                <div class="col-lg-4 justify-content-center text-center">
                                    <Pagination CurrentPage="_page" ListCount="_submittedServices.Count" OnPageIsSelected="HandleOnPageIsSelected" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </Authorized>
</AuthorizeView>
@code {
    #region Parameters
    private string _searchPhrase = string.Empty;
    private List<SubmittedServiceSummarySharedModel>? _submittedServices;
    private List<SubmittedServiceSummarySharedModel>? _showingServices;
    private int _page = 1;
    #endregion

    #region Methods
    private async Task GetAllSubmittedWritingCorrections()
    {
        try
        {
            var response = await Mediator.Send(new GetAllSubmittedWritingCorrectionsSummaryRequest(_searchPhrase));
            if (response?.SubmittedServices is not null)
            {
                _submittedServices = response.SubmittedServices;
                HandleOnPageIsSelected(1);
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
    #endregion

    #region EventHandler
    private void HandleOnPageIsSelected(int page)
    {
        if (_submittedServices is not null)
        {
            var index = (page - 1) * Pagination.ItemPerPage;
            _showingServices = _submittedServices?.GetRange
            (index, (index + 1) * Pagination.ItemPerPage <= _submittedServices.Count ?
            Pagination.ItemPerPage : _submittedServices.Count - (index * Pagination.ItemPerPage));
            _page = page;
        }
    }
    #endregion

    #region Page Details and Information
    public const string PageUrl = "/services/writingCorrection/teacher/viewAll";
    #endregion

}
