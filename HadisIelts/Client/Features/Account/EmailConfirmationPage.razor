@page "/account/emailConfirmation"
@using HadisIelts.Shared.Requests.Account;
@inject IMediator Mediator;
@attribute [AllowAnonymous]
<PageTitle>Email Confirmation</PageTitle>
@if (_succeeded)
{
    <div class="container alert alert-success col-lg-5 text-center justify-content-center" style="margin-top:20px;" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </svg>
        <span>Your Email is Confirmed! Now You can <a class="btn btn-secondary" href="@(LoginPage.PageUrl)">Login</a> to your Account</span>
    </div>
}
else
{
    <div class="container alert alert-danger col-lg-5 text-center justify-content-center" role="alert" style="margin-top:20px;">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
        </svg>
        <span>There was something wrong with your request</span>
    </div>

}
@code {
    [Parameter, SupplyParameterFromQuery]
    public string? userId { get; set; }
    [Parameter, SupplyParameterFromQuery]
    public string? token { get; set; }
    private bool _succeeded = false;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var request = new ConfirmEmailRequest(userId, token);
            var response = await Mediator.Send(request);
            _succeeded = response.Succeeded;
        }
        catch (Exception)
        {

            throw;
        }
    }
}
