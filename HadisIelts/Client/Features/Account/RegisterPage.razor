@page "/account/register"
@using HadisIelts.Client.Features.Account.Models;
@using HadisIelts.Client.Services.User;
@using HadisIelts.Shared.Requests.Account;
@using MediatR;
@inject IMediator Mediator;
@inject NavigationManager NavMan;
@inject IUserServices UserServices;
@attribute [AllowAnonymous]
<div class="container col-lg-4 col-md-6 main-form">
    <EditForm Model="@_registerModel" OnValidSubmit="UploadRegisterForm">
        <FluentValidationValidator />
        <main class="form-signin w-100 m-auto">
            <h1 class="h3 mb-3 fw-normal">Please sign up</h1>
            <div class="container">
                <div class="row">
                    <div class="col-11">
                        <div class="form-floating">
                            <InputText @bind-Value="_registerModel.Email" type="email" class="form-control" id="floatingInput" placeholder="name@example.com" />
                            <label for="floatingInput">Email address</label>
                            <ValidationMessage For="@(()=>_registerModel.Email)" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-11">
                        <div class="form-floating">
                            <InputText @bind-Value="_registerModel.Password" type="@(_showPassword?"text":"password")" class="form-control" id="floatingPassword" placeholder="Password" />
                            <label for="floatingPassword">Password</label>
                            <ValidationMessage For="@(()=>_registerModel.Password)" />
                        </div>
                    </div>
                    <div class="col-1" style="margin:auto;">
                        <i class="fa @(_showPassword?"fa-eye":"fa-eye-slash")" style="cursor:pointer;font-size:15px;"
                           @onclick="(()=>_showPassword = !_showPassword)"></i>
                    </div>
                </div>
                <div class="row">
                    <div class="col-11">

                        <div class="form-floating">
                            <InputText @bind-Value="_registerModel.ConfirmPassword" type="@(_showPassword?"text":"password")" class="form-control" id="floatingPassword" placeholder="Confirm Password" />
                            <label for="floatingPassword">Confirm Password</label>
                            <ValidationMessage For="@(()=>_registerModel.ConfirmPassword)" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-11">
                        <button class="w-100 btn btn-lg btn-primary" type="submit">Sign up</button>
                    </div>
                </div>
            </div>
        </main>
    </EditForm>
    <p style="margin:5px;">Already have an account? <a class="btn btn-outline-secondary" href="@(LoginPage.PageUrl)">Login</a></p>
    @if (_submitSuccess)
    {
        <div class="alert alert-success container" style="text-align:center;" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
            </svg>
            <span>Successfully registered! You will be redirected to your profile</span>
        </div>
    }
    else if (_errorMessage != string.Empty)
    {
        <div class="alert alert-danger" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
            </svg>
            @_errorMessage
        </div>
    }
</div>
@code {
    #region Parameters
    private RegisterModel _registerModel { get; set; } = new RegisterModel();
    private bool _submitSuccess = false;
    private string _errorMessage = string.Empty;
    private bool _showPassword = false;
    #endregion

    #region Initializers
    protected override async Task OnInitializedAsync()
    {
        var userID = await UserServices.GetUserIdAsync();
        if (userID != null)
        {
            NavMan.NavigateTo(ProfilePage.PageUrl);
        }
    }
    #endregion

    #region Methods
    private async Task UploadRegisterForm()
    {
        try
        {
            var request = new RegisterAccountRequest(
                Email: _registerModel.Email,
                Password: _registerModel.Password);
            var response = await Mediator.Send(request);
            if (response is not null)
            {
                if (response.registerSuccess)
                {
                    _submitSuccess = response.registerSuccess;
                    await Task.Delay(2000);
                    NavMan.NavigateTo("/user/profile", true);
                }
                else
                {
                    _errorMessage = "This email is already registered";
                }

            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw;
        }
    }
    #endregion

    #region Page Details and Information
    public const string PageUrl = "/account/register";
    #endregion

}
