@page "/account/changePassword"
@using HadisIelts.Client.Features.Account.Models;
@using HadisIelts.Shared.Requests.Account;
@inject IMediator Mediator;
<PageTitle>Change Password</PageTitle>
<div class="container col-lg-4 col-md-6 main-form">
    <EditForm Model="@_changePasswordModel" OnValidSubmit="SendChangePasswordForm">
        <FluentValidationValidator />
        <main class="form-signin w-100 m-auto main-container">
            <h1 class="h3 mb-3 fw-normal">Insert your new password</h1>
            <div class="container">
                <div class="row">
                    <div class="col-11">
                        <div class="form-floating">
                            <InputText @bind-Value="_changePasswordModel.CurrentPassword" type="@(_showCurrentPassword?"text":"password")" class="form-control" id="floatingPassword" placeholder="Password" />
                            <label for="floatingPassword">Current Password</label>
                            <ValidationMessage For="@(()=>_changePasswordModel.CurrentPassword)" />
                        </div>
                    </div>
                    <div class="col-1" style="margin:auto;">
                        <i class="fa @(_showCurrentPassword?"fa-eye":"fa-eye-slash")" style="cursor:pointer;font-size:15px;"
                           @onclick="(()=>_showCurrentPassword = !_showCurrentPassword)"></i>
                    </div>
                </div>
                    <div class="row">
                    <div class="col-11">
                        <div class="form-floating">
                            <InputText @bind-Value="_changePasswordModel.NewPassword" type="@(_showPassword?"text":"password")" class="form-control" id="floatingPassword" placeholder="Password" />
                            <label for="floatingPassword">New Password</label>
                            <ValidationMessage For="@(()=>_changePasswordModel.NewPassword)" />
                        </div>
                    </div>
                    <div class="col-1" style="margin:auto;">
                        <i class="fa @(_showPassword?"fa-eye":"fa-eye-slash")" style="cursor:pointer;font-size:15px;"
                           @onclick="(()=>_showPassword = !_showPassword)"></i>
                    </div>
                </div>
                <div class="row">
                    <div class="col-11">

                        <div class="form-floating">
                            <InputText @bind-Value="_changePasswordModel.ConfirmNewPassword" type="@(_showPassword?"text":"password")" class="form-control" id="floatingPassword" placeholder="Confirm Password" />
                            <label for="floatingPassword">Confirm Password</label>
                            <ValidationMessage For="@(()=>_changePasswordModel.ConfirmNewPassword)" />
                        </div>
                    </div>
                    
                </div>
                <div class="row" style="margin:auto;">
                    <div class="col-11">
                        <button class="w-100 btn btn-lg btn-primary" type="submit">Change Password</button>
                    </div>
                </div>
            </div>
        </main>
    </EditForm>
    @if (_submitSucceeded)
    {
        <div class="alert alert-success container" style="text-align:center;margin-top:10px;" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
            </svg>
            <span>Your password changed successfully</span>
        </div>
    }
</div>
@code {
    #region Parameters    
    private ChangePasswordModel _changePasswordModel = new ChangePasswordModel();
    private bool _showPassword = false;
    private bool _showCurrentPassword = false;
    private bool _submitSucceeded = false;
    #endregion

    #region Methods
    private async Task SendChangePasswordForm()
    {
        try
        {
            var request = new ChangePasswordRequest(_changePasswordModel.CurrentPassword, _changePasswordModel.NewPassword);
            var result = await Mediator.Send(request);
            _submitSucceeded = result.Succeeded;
        }
        catch (Exception)
        {
            throw;
        }
    }
    #endregion

    #region Page Details and Information
    public const string PageUrl = "/account/changePassword";
    #endregion
}
