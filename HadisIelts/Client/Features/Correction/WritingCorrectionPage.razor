@page "/Services/WritingCorrection/UploadFiles"
@using HadisIelts.Client.Features.Correction.Models;
@using HadisIelts.Client.Services.File;
@using HadisIelts.Shared.Requests.Correction;
@using HadisIelts.Shared.Requests.Payment;
@using MediatR;
@using System.Timers;
@using static HadisIelts.Shared.Enums.FileRelatedEnums;
@inject NavigationManager NavigationManager
@inject IMediator Mediator;
@inject IFileServices FileServices;
<BreadCrumb Pages=@BreadCrumbs />
<div class="container">
    <div class="row">
        <div class="col-lg-6 main-form">
            <ProcessWritingFilesTable OnUploadFilesToProcessAsync="HandleOnUploadFilesToProcessAsync" />

            @if (_isUploading)
            {
                <div class="progress" style="margin-top:10px;">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: @(_uploadingProgress)%;"></div>
                </div>
            }
            @if (_areFilesProcessed)
            {
                <div class="alert alert-success container" style="text-align:center;" role="alert">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                    </svg>
                    <span>Your files has been processed successfully! You can now submit your files.</span>
                </div>
            }
            <div class="alert alert-success container" style="text-align:center;" role="alert">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                </svg>
                <span>Your files has been submitted successfully! You will be redirected to payment page.</span>
                <span>@_counter</span>
            </div>
            else if (_errorMessage != string.Empty)
            {
            <div class="alert alert-danger" role="alert">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
                </svg>
                @_errorMessage
            </div>
            }
        </div>
    </div>
</div>

@code {
    private int _counter;
    private bool _isUploading;
    private int _uploadingProgress = 0;
    private bool _areFilesProcessed;
    private bool _isProcessing = false;
    private string? _errorMessage = string.Empty;
    private string? _successMessage = string.Empty;
    private List<ProcessedWritingFile> _processedWritingFiles = new();

    private async Task HandleOnUploadFilesToProcessAsync(UserWritingCorrectionRequest userWritingCorrectionRequest)
    {
        var writingFiles = await FileServices.ConvertIBrowseFilesToWritingFilesAsync
        (userWritingCorrectionRequest.WritingFiles);
        var request = new ProcessWritingFilesRequest(new ProcessFilesRequest
            {
                WritingFiles = writingFiles,
                RequiresEmailResponse = userWritingCorrectionRequest.RequiresEmailResponse
            });
        var response = await Mediator.Send(request);
        if (response.CalculatedPayment is not null)
        {
            _areFilesProcessed = true;
            _successMessage = response.CalculatedPayment.Message;
            _processedWritingFiles = response.CalculatedPayment.ProcessedFiles;
            StateHasChanged();
        }
        else
        {
            _errorMessage = response.CalculatedPayment.Message;
            StateHasChanged();
        }
    }
    public List<WebsitePage> BreadCrumbs { get; set; } = new List<WebsitePage>{
        new WebsitePage{Name="Home",DisplayName="Home",Link="/" },
        new WebsitePage{Name="Services",DisplayName="Correction Services",Link="/Services" },
        new WebsitePage{Name="WritingCorrection",DisplayName="Writing Correction",Link="/Services/Correction/Writing" },
    };
}
